{
  "openapi": "3.0.0",
  "info": {
    "title": "Swagger Json",
    "description": "This is a generated swagger json for your sails project",
    "termsOfService": "http://example.com/terms",
    "contact": {
      "name": "Theophilus Omoregbee",
      "url": "http://github.com/theo4u",
      "email": "theo4u@ymail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:1337/"
    }
  ],
  "externalDocs": {
    "url": "https://theoomoregbee.github.io/"
  },
  "tags": [
    {
      "name": "Followers",
      "description": "Sails blueprint actions for the **Followers** model"
    },
    {
      "name": "Interests",
      "description": "Sails blueprint actions for the **Interests** model"
    },
    {
      "name": "Reviews",
      "description": "Sails blueprint actions for the **Reviews** model"
    },
    {
      "name": "Tables",
      "description": "Sails blueprint actions for the **Tables** model"
    },
    {
      "name": "Tags",
      "description": "Sails blueprint actions for the **Tags** model"
    },
    {
      "name": "Users",
      "description": "Sails blueprint actions for the **Users** model"
    },
    {
      "name": "Fb"
    },
    {
      "name": "index"
    },
    {
      "name": "create"
    },
    {
      "name": "photo-upload"
    },
    {
      "name": "activate"
    },
    {
      "name": "update"
    },
    {
      "name": "view"
    },
    {
      "name": "Manager"
    },
    {
      "name": "set-price"
    },
    {
      "name": "view-price"
    },
    {
      "name": "list"
    },
    {
      "name": "booked-my-tables-user-list"
    },
    {
      "name": "accept-booking"
    },
    {
      "name": "booked-all-my-list"
    },
    {
      "name": "book-table"
    },
    {
      "name": "capture-payment"
    },
    {
      "name": "refund-payment"
    },
    {
      "name": "cancel-booking"
    },
    {
      "name": "Bookmark"
    },
    {
      "name": "profile"
    },
    {
      "name": "destroy-user"
    },
    {
      "name": "create-host"
    },
    {
      "name": "create-table"
    },
    {
      "name": "test-capture-payment"
    }
  ],
  "components": {
    "schemas": {
      "accesstokens": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/accesstokens-without-required-constraint"
          },
          {
            "required": [
              "user_id",
              "client_id"
            ]
          }
        ]
      },
      "accesstokens-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **AccessTokens**",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoCreatedAt"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoUpdatedAt"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "user_id": {},
          "client_id": {},
          "token": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          }
        }
      },
      "bookmarks": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/bookmarks-without-required-constraint"
          }
        ]
      },
      "bookmarks-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **BookMarks**",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoCreatedAt"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoUpdatedAt"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "status": {
            "type": "number",
            "format": "double"
          },
          "table_id": {
            "description": "JSON dictionary representing the **tables** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/tables"
              }
            ]
          },
          "creator_profile_id": {
            "description": "JSON dictionary representing the **profilemembers** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/profilemembers"
              }
            ]
          },
          "user_id": {
            "description": "JSON dictionary representing the **users** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/users"
              }
            ]
          }
        }
      },
      "clients": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/clients-without-required-constraint"
          },
          {
            "required": [
              "name",
              "redirect_uri"
            ]
          }
        ]
      },
      "clients-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Clients**",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoCreatedAt"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoUpdatedAt"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "name": {
            "type": "string",
            "uniqueItems": true
          },
          "redirect_uri": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "trusted": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "deletedaccount": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/deletedaccount-without-required-constraint"
          }
        ]
      },
      "deletedaccount-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **DeletedAccount**",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoCreatedAt"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoUpdatedAt"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "deleted_user_id": {},
          "email": {
            "maxLength": 300
          },
          "first_name": {
            "type": "string",
            "maxLength": 300
          },
          "last_name": {
            "type": "string",
            "maxLength": 300
          },
          "description": {
            "type": "string",
            "maxLength": 300
          },
          "photo": {
            "type": "string",
            "maxLength": 300
          },
          "phone": {},
          "street": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "format": "double"
          },
          "status_glossary": {
            "type": "string",
            "maxLength": 100
          },
          "about_me": {
            "type": "string",
            "maxLength": 300
          },
          "one_signal_push_tokens": {},
          "tokens": {},
          "last_active": {
            "type": "string",
            "format": "date-time"
          },
          "last_checkin_via": {
            "type": "string",
            "maxLength": 100
          },
          "facebook_id": {
            "type": "string",
            "nullable": true
          },
          "facebook_data": {},
          "linkedin_id": {
            "type": "string",
            "nullable": true
          },
          "linkedin_data": {},
          "interests": {},
          "followers": {
            "type": "number",
            "format": "double"
          },
          "google_id": {
            "type": "string",
            "nullable": true
          },
          "google_data": {},
          "otp_session_id": {
            "type": "string",
            "nullable": true
          },
          "reviews": {},
          "linked_account_id": {
            "type": "string"
          },
          "linked_product_id": {
            "type": "string"
          },
          "pronoun": {
            "type": "string"
          },
          "instagram_link": {
            "type": "string"
          },
          "linkedin_link": {
            "type": "string"
          },
          "table_count": {
            "type": "number",
            "format": "double"
          },
          "age": {
            "type": "number",
            "format": "double"
          },
          "gender": {
            "type": "string"
          },
          "uu_id": {
            "type": "string"
          },
          "account": {
            "description": "JSON dictionary representing the **users** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/users"
              }
            ]
          }
        }
      },
      "errordetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/errordetail-without-required-constraint"
          }
        ]
      },
      "errordetail-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **ErrorDetail**",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoCreatedAt"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoUpdatedAt"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "table_id": {
            "type": "number",
            "format": "double"
          },
          "user_id": {
            "type": "number",
            "format": "double"
          },
          "type": {
            "type": "number",
            "format": "double"
          },
          "creator_id": {
            "type": "number",
            "format": "double"
          },
          "type_glossary": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "booking_id": {
            "type": "number",
            "format": "double",
            "default": 0
          },
          "error_details": {},
          "booking_details": {},
          "issued_at": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "format": "double",
            "default": 1,
            "example": 1
          }
        }
      },
      "eventstatus": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/eventstatus-without-required-constraint"
          }
        ]
      },
      "eventstatus-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **EventStatus**",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoCreatedAt"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoUpdatedAt"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "table_id": {
            "type": "number",
            "format": "double"
          },
          "creator_id": {
            "type": "number",
            "format": "double"
          },
          "user_id": {
            "type": "number",
            "format": "double"
          },
          "event_done_flag": {
            "type": "boolean"
          }
        }
      },
      "followers": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/followers-without-required-constraint"
          },
          {
            "required": [
              "creator_profile_id"
            ]
          }
        ]
      },
      "followers-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Followers**",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoCreatedAt"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoUpdatedAt"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "follower_profile_id": {},
          "status": {
            "type": "number",
            "format": "double"
          },
          "creator_profile_id": {
            "description": "JSON dictionary representing the **profilemembers** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/profilemembers"
              }
            ]
          }
        }
      },
      "followersusers": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/followersusers-without-required-constraint"
          },
          {
            "required": [
              "follower_id",
              "user_id"
            ]
          }
        ]
      },
      "followersusers-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **FollowersUsers**",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoCreatedAt"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoUpdatedAt"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "status": {
            "type": "number",
            "format": "double"
          },
          "follower_id": {
            "description": "JSON dictionary representing the **tables** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/tables"
              }
            ]
          },
          "user_id": {
            "description": "JSON dictionary representing the **users** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/users"
              }
            ]
          }
        }
      },
      "interests": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/interests-without-required-constraint"
          },
          {
            "required": [
              "name"
            ]
          }
        ]
      },
      "interests-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Interests**",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoCreatedAt"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoUpdatedAt"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "name": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "width": {
            "type": "number",
            "format": "double",
            "default": 50,
            "example": 50
          },
          "height": {
            "type": "number",
            "format": "double",
            "default": 50,
            "example": 50
          },
          "status": {
            "type": "number",
            "format": "double"
          },
          "orderby": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "notifications": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/notifications-without-required-constraint"
          }
        ]
      },
      "notifications-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Notifications**",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoCreatedAt"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoUpdatedAt"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "type": {
            "type": "string",
            "maxLength": 1000
          },
          "read": {
            "type": "boolean",
            "default": false
          },
          "is_paid": {
            "type": "boolean"
          },
          "status": {
            "type": "number",
            "format": "double"
          },
          "template_id": {
            "type": "string"
          },
          "table_id": {
            "description": "JSON dictionary representing the **tables** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/tables"
              }
            ]
          },
          "follow_user": {
            "description": "JSON dictionary representing the **profilemembers** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/profilemembers"
              }
            ]
          },
          "receiver": {
            "description": "JSON dictionary representing the **profilemembers** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/profilemembers"
              }
            ]
          },
          "sender": {
            "description": "JSON dictionary representing the **profilemembers** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/profilemembers"
              }
            ]
          },
          "message": {
            "type": "string",
            "maxLength": 1000
          },
          "pay_order_id": {
            "type": "string"
          }
        }
      },
      "payouthost": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/payouthost-without-required-constraint"
          }
        ]
      },
      "payouthost-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **PayoutHost**",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoCreatedAt"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoUpdatedAt"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "table_id": {
            "type": "number",
            "format": "double"
          },
          "creator_id": {
            "type": "number",
            "format": "double"
          },
          "users_count": {
            "type": "number",
            "format": "double"
          },
          "user_attended_count": {
            "type": "number",
            "format": "double"
          },
          "payout": {
            "type": "number",
            "format": "double"
          },
          "pending_payment": {
            "type": "number",
            "format": "double"
          },
          "total_payment": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "profileadmin": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/profileadmin-without-required-constraint"
          },
          {
            "required": [
              "username"
            ]
          }
        ]
      },
      "profileadmin-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **ProfileAdmin**",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoCreatedAt"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoUpdatedAt"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "username": {},
          "email": {
            "type": "string",
            "maxLength": 300
          },
          "password": {
            "type": "string",
            "maxLength": 300
          },
          "first_name": {
            "type": "string",
            "maxLength": 300
          },
          "last_name": {
            "type": "string",
            "maxLength": 300
          },
          "photo": {
            "type": "string",
            "maxLength": 300
          },
          "phone": {
            "type": "string",
            "maxLength": 300
          },
          "status": {
            "type": "number",
            "format": "double"
          },
          "status_glossary": {
            "type": "string",
            "maxLength": 100
          },
          "about_me": {
            "type": "string",
            "maxLength": 300
          },
          "one_signal_push_tokens": {},
          "tokens": {},
          "last_active": {
            "type": "string",
            "format": "date-time"
          },
          "last_checkin_via": {
            "type": "string",
            "maxLength": 100
          },
          "otp_session_id": {
            "type": "string",
            "nullable": true
          },
          "uu_id": {
            "type": "string"
          },
          "account": {
            "description": "JSON dictionary representing the **users** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/users"
              }
            ]
          }
        }
      },
      "profilemanagers": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/profilemanagers-without-required-constraint"
          },
          {
            "required": [
              "email"
            ]
          }
        ]
      },
      "profilemanagers-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **ProfileManagers**",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoCreatedAt"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoUpdatedAt"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email",
            "uniqueItems": true
          },
          "phone": {},
          "photo": {
            "type": "string"
          },
          "status_glossary": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "account": {
            "description": "JSON dictionary representing the **users** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/users"
              }
            ]
          },
          "uu_id": {
            "type": "string"
          }
        }
      },
      "profilemembers": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/profilemembers-without-required-constraint"
          }
        ]
      },
      "profilemembers-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **ProfileMembers**",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoCreatedAt"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoUpdatedAt"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "email": {
            "maxLength": 300
          },
          "first_name": {
            "type": "string",
            "maxLength": 300
          },
          "last_name": {
            "type": "string",
            "maxLength": 300
          },
          "description": {
            "type": "string",
            "maxLength": 300
          },
          "photo": {
            "type": "string",
            "maxLength": 300
          },
          "phone": {},
          "street": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "format": "double"
          },
          "status_glossary": {
            "type": "string",
            "maxLength": 100
          },
          "about_me": {
            "type": "string",
            "maxLength": 300
          },
          "one_signal_push_tokens": {},
          "tokens": {},
          "last_active": {
            "type": "string",
            "format": "date-time"
          },
          "last_checkin_via": {
            "type": "string",
            "maxLength": 100
          },
          "facebook_id": {
            "type": "string",
            "nullable": true
          },
          "facebook_data": {},
          "linkedin_id": {
            "type": "string",
            "nullable": true
          },
          "linkedin_data": {},
          "interests": {},
          "followers": {
            "type": "number",
            "format": "double"
          },
          "google_id": {
            "type": "string",
            "nullable": true
          },
          "google_data": {},
          "otp_session_id": {
            "type": "string",
            "nullable": true
          },
          "reviews": {},
          "reviews_count": {
            "type": "number",
            "format": "double"
          },
          "linked_account_id": {
            "type": "string"
          },
          "linked_product_id": {
            "type": "string"
          },
          "pronoun": {
            "type": "string"
          },
          "instagram_data": {},
          "instagram_link": {
            "type": "string"
          },
          "linkedin_link": {
            "type": "string"
          },
          "x_link": {
            "type": "string"
          },
          "x_data": {},
          "table_count": {
            "type": "number",
            "format": "double"
          },
          "booked": {
            "type": "number",
            "format": "double"
          },
          "age": {
            "type": "number",
            "format": "double"
          },
          "gender": {
            "type": "string"
          },
          "account_details": {},
          "profile_completion_status": {},
          "uu_id": {
            "type": "string"
          },
          "account": {
            "description": "JSON dictionary representing the **users** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/users"
              }
            ]
          }
        }
      },
      "refreshtokens": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/refreshtokens-without-required-constraint"
          },
          {
            "required": [
              "user_id",
              "client_id"
            ]
          }
        ]
      },
      "refreshtokens-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **RefreshTokens**",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoCreatedAt"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoUpdatedAt"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "user_id": {},
          "client_id": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "reporthost": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/reporthost-without-required-constraint"
          }
        ]
      },
      "reporthost-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **ReportHost**",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoCreatedAt"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoUpdatedAt"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "table_id": {
            "type": "number",
            "format": "double"
          },
          "creator_id": {
            "type": "number",
            "format": "double"
          },
          "user_id": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "type": "number",
            "format": "double"
          },
          "status_glossary": {
            "type": "string"
          },
          "host_complaint": {
            "type": "string"
          }
        }
      },
      "reporttable": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/reporttable-without-required-constraint"
          }
        ]
      },
      "reporttable-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **ReportTable**",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoCreatedAt"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoUpdatedAt"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "table_id": {
            "type": "number",
            "format": "double"
          },
          "creator_id": {
            "type": "number",
            "format": "double"
          },
          "user_id": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "type": "number",
            "format": "double"
          },
          "status_glossary": {
            "type": "string"
          },
          "table_complaint": {
            "type": "string"
          }
        }
      },
      "reviews": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/reviews-without-required-constraint"
          },
          {
            "required": [
              "table_id",
              "creator_profile_id"
            ]
          }
        ]
      },
      "reviews-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Reviews**",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoCreatedAt"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoUpdatedAt"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "reviews": {
            "type": "number",
            "format": "double"
          },
          "comments": {
            "type": "string"
          },
          "table_id": {
            "description": "JSON dictionary representing the **tables** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/tables"
              }
            ]
          },
          "reviewer_profile_id": {
            "type": "number",
            "format": "double"
          },
          "creator_profile_id": {
            "description": "JSON dictionary representing the **profilemembers** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/profilemembers"
              }
            ]
          }
        }
      },
      "savetables": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/savetables-without-required-constraint"
          },
          {
            "required": [
              "table_id",
              "user_id"
            ]
          }
        ]
      },
      "savetables-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **SaveTables**",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoCreatedAt"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoUpdatedAt"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "is_saved": {
            "type": "number",
            "format": "double"
          },
          "table_id": {
            "description": "JSON dictionary representing the **tables** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/tables"
              }
            ]
          },
          "user_id": {
            "description": "JSON dictionary representing the **users** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/users"
              }
            ]
          }
        }
      },
      "standardtable": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/standardtable-without-required-constraint"
          }
        ]
      },
      "standardtable-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **StandardTable**",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoCreatedAt"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoUpdatedAt"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "table_type": {
            "type": "number",
            "format": "double"
          },
          "price": {
            "type": "string"
          },
          "admin_id": {
            "type": "number",
            "format": "double"
          },
          "admin_type": {
            "type": "number",
            "format": "double"
          },
          "last_checkin_via": {
            "type": "string"
          },
          "uu_id": {
            "type": "string"
          }
        }
      },
      "subscriptions": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/subscriptions-without-required-constraint"
          },
          {
            "required": [
              "table_id",
              "user_id"
            ]
          }
        ]
      },
      "subscriptions-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Subscriptions**",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoCreatedAt"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoUpdatedAt"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "is_subscribe": {
            "type": "boolean"
          },
          "status": {
            "type": "number",
            "format": "double",
            "default": 1,
            "example": 1
          },
          "table_id": {
            "description": "JSON dictionary representing the **tables** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/tables"
              }
            ]
          },
          "user_id": {
            "description": "JSON dictionary representing the **users** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/users"
              }
            ]
          }
        }
      },
      "tablebooking": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/tablebooking-without-required-constraint"
          },
          {
            "required": [
              "table_id",
              "creator_id",
              "user_id"
            ]
          }
        ]
      },
      "tablebooking-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **TableBooking**",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoCreatedAt"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoUpdatedAt"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "order_id": {
            "type": "string"
          },
          "seats": {
            "type": "number",
            "format": "double"
          },
          "payment_id": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "type": "number",
            "format": "double"
          },
          "payment_details": {},
          "refund_details": {},
          "event_done_flag": {
            "type": "boolean"
          },
          "table_info": {},
          "creator_info": {},
          "user_info": {},
          "table_id": {
            "description": "JSON dictionary representing the **tables** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/tables"
              }
            ]
          },
          "creator_id": {
            "description": "JSON dictionary representing the **profilemembers** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/profilemembers"
              }
            ]
          },
          "user_id": {
            "description": "JSON dictionary representing the **profilemembers** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/profilemembers"
              }
            ]
          },
          "remarks": {},
          "status_glossary": {
            "type": "string"
          }
        }
      },
      "tablestatus": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/tablestatus-without-required-constraint"
          }
        ]
      },
      "tablestatus-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **TableStatus**",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoCreatedAt"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoUpdatedAt"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "table_id": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "type": "number",
            "format": "double"
          },
          "admin_id": {
            "type": "number",
            "format": "double"
          },
          "user_type": {
            "type": "number",
            "format": "double"
          },
          "table_creator_id": {
            "type": "number",
            "format": "double"
          },
          "last_checkin_via": {
            "type": "string"
          },
          "uu_id": {
            "type": "string"
          }
        }
      },
      "tables": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/tables-without-required-constraint"
          },
          {
            "required": [
              "type",
              "min_seats",
              "max_seats",
              "title",
              "price"
            ]
          }
        ]
      },
      "tables-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Tables**",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoCreatedAt"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoUpdatedAt"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "full_name": {
            "type": "string"
          },
          "type": {
            "type": "number",
            "format": "double"
          },
          "media": {},
          "video": {},
          "description": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "min_seats": {
            "type": "number",
            "format": "double",
            "minimum": 1
          },
          "max_seats": {
            "type": "number",
            "format": "double",
            "minimum": 1
          },
          "booked_seats": {
            "type": "number",
            "format": "double"
          },
          "booked": {
            "type": "number",
            "format": "double"
          },
          "bookmarks": {
            "type": "number",
            "format": "double"
          },
          "followers": {
            "type": "number",
            "format": "double"
          },
          "title": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "tags": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "event_date": {
            "type": "string",
            "format": "date-time"
          },
          "reviews": {
            "type": "number",
            "format": "double"
          },
          "user_type": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "type": "number",
            "format": "double"
          },
          "admin_id": {
            "type": "number",
            "format": "double"
          },
          "event_done_flag": {
            "type": "boolean"
          },
          "state": {
            "type": "string"
          },
          "district": {
            "type": "string"
          },
          "pincode": {
            "type": "string"
          },
          "order_by": {
            "type": "string"
          },
          "table_expense": {
            "type": "number",
            "format": "double"
          },
          "location_details": {},
          "location": {},
          "inclusion": {
            "type": "string",
            "nullable": true
          },
          "exclusions": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "description": "JSON dictionary representing the **interests** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/interests"
              }
            ]
          },
          "created_by": {
            "description": "JSON dictionary representing the **profilemembers** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/profilemembers"
              }
            ]
          },
          "user_profile": {
            "description": "JSON dictionary representing the **profilemembers** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/profilemembers"
              }
            ]
          },
          "format_geo_address": {
            "type": "string"
          }
        }
      },
      "tags": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/tags-without-required-constraint"
          }
        ]
      },
      "tags-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Tags**",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoCreatedAt"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoUpdatedAt"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "tags": {
            "type": "string"
          }
        }
      },
      "users": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/users-without-required-constraint"
          },
          {
            "required": [
              "username"
            ]
          }
        ]
      },
      "users-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Users**",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoCreatedAt"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoUpdatedAt"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "username": {},
          "email": {
            "type": "string",
            "maxLength": 300
          },
          "password": {
            "type": "string",
            "maxLength": 300
          },
          "first_name": {
            "type": "string",
            "maxLength": 300
          },
          "last_name": {
            "type": "string",
            "maxLength": 300
          },
          "types": {},
          "status": {
            "type": "number",
            "format": "double"
          },
          "status_glossary": {
            "type": "string",
            "maxLength": 100
          },
          "tokens": {},
          "last_active": {
            "type": "string",
            "format": "date-time"
          },
          "last_checkin_via": {
            "type": "string",
            "maxLength": 100
          },
          "facebook_id": {
            "type": "string",
            "nullable": true
          },
          "facebook_data": {},
          "linkedin_id": {
            "type": "string",
            "nullable": true
          },
          "linkedin_data": {},
          "google_id": {
            "type": "string",
            "nullable": true
          },
          "google_data": {},
          "apple_id": {
            "type": "string",
            "nullable": true
          },
          "apple_data": {},
          "uu_id": {
            "type": "string"
          },
          "profile_admin": {
            "description": "JSON dictionary representing the **profileadmin** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/profileadmin"
              }
            ]
          },
          "profile_members": {
            "description": "JSON dictionary representing the **profilemembers** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/profilemembers"
              }
            ]
          },
          "profile_managers": {
            "description": "JSON dictionary representing the **profilemanagers** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/profilemanagers"
              }
            ]
          }
        }
      }
    },
    "parameters": {
      "AttributeFilterParam": {
        "in": "query",
        "name": "_*_",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "To filter results based on a particular attribute, specify a query parameter with the same name as the attribute defined on your model. For instance, if our `Purchase` model has an `amount` attribute, we could send `GET /purchase?amount=99.99` to return a list of $99.99 purchases."
      },
      "WhereQueryParam": {
        "in": "query",
        "name": "where",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Instead of filtering based on a specific attribute, you may instead choose to provide a `where` parameter with the WHERE piece of a [Waterline criteria](https://sailsjs.com/documentation/concepts/models-and-orm/query-language), _encoded as a JSON string_. This allows you to take advantage of `contains`, `startsWith`, and other sub-attribute criteria modifiers for more powerful `find()` queries.\n\ne.g. `?where={\"name\":{\"contains\":\"theodore\"}}`"
      },
      "LimitQueryParam": {
        "in": "query",
        "name": "limit",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "description": "The maximum number of records to send back (useful for pagination). Defaults to 30."
      },
      "SkipQueryParam": {
        "in": "query",
        "name": "skip",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "description": "The number of records to skip (useful for pagination)."
      },
      "SortQueryParam": {
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "The sort order. By default, returned records are sorted by primary key value in ascending order.\n\ne.g. `?sort=lastName%20ASC`"
      }
    }
  },
  "paths": {
    "/fb-connect": {
      "get": {
        "summary": "/fb-connect",
        "tags": [
          "Fb"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/status-codes": {
      "get": {
        "summary": "/status-codes",
        "tags": [
          "index"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/manager/create": {
      "post": {
        "summary": "/manager/create",
        "tags": [
          "create"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/manager/photo-upload": {
      "post": {
        "summary": "/manager/photo-upload",
        "tags": [
          "photo-upload"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/manager/activate": {
      "put": {
        "summary": "/manager/activate",
        "tags": [
          "activate"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/manager/update": {
      "put": {
        "summary": "/manager/update",
        "tags": [
          "update"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/manager/view": {
      "get": {
        "summary": "/manager/view",
        "tags": [
          "view"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/manager/list": {
      "get": {
        "summary": "Retrieve a manager list.",
        "description": "Use this API to retrieve a manager list..",
        "operationId": "manager/list",
        "tags": [
          "Manager"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Request form list retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string",
                      "example": "Request form list retrieved successfully."
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "description": "Count of the meta data.",
                          "type": "number",
                          "example": 2
                        },
                        "total": {
                          "description": "Total of the meta data.",
                          "type": "number",
                          "example": 2
                        },
                        "page": {
                          "description": "Page of the meta data.",
                          "type": "number",
                          "example": 1
                        },
                        "limit": {
                          "description": "Limit of the meta data.",
                          "type": "number",
                          "example": 3
                        }
                      }
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "created_at": {
                            "description": "Created_at of the item.",
                            "type": "object",
                            "example": "2024-09-28T03:51:09.295Z"
                          },
                          "updated_at": {
                            "description": "Updated_at of the item.",
                            "type": "object",
                            "example": "2024-09-28T03:51:09.295Z"
                          },
                          "id": {
                            "description": "Id of the item.",
                            "type": "number",
                            "example": 108
                          },
                          "first_name": {
                            "description": "First_name of the item.",
                            "type": "string",
                            "example": "man3 john"
                          },
                          "last_name": {
                            "description": "Last_name of the item.",
                            "type": "string",
                            "example": ""
                          },
                          "email": {
                            "description": "Email of the item.",
                            "type": "string",
                            "example": "admin@hightable.ai"
                          },
                          "phone": {
                            "description": "Phone of the item.",
                            "type": "string",
                            "example": "123"
                          },
                          "photo": {
                            "description": "Photo of the item.",
                            "type": "string",
                            "example": ""
                          },
                          "status_glossary": {
                            "description": "Status_glossary of the item.",
                            "type": "object",
                            "example": null
                          },
                          "status": {
                            "description": "Status of the item.",
                            "type": "number",
                            "example": 1
                          },
                          "uu_id": {
                            "description": "Uu_id of the item.",
                            "type": "string",
                            "example": "HPAzQV1PuS"
                          },
                          "account": {
                            "description": "Account of the item.",
                            "type": "number",
                            "example": 1470
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "You don't have permission to perform this action"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "page": {
                    "description": "Page of the request.",
                    "type": "integer",
                    "example": 1,
                    "minimum": 1
                  },
                  "limit": {
                    "description": "Limit of the request.",
                    "type": "integer",
                    "example": 1,
                    "minimum": 1
                  }
                },
                "required": [
                  "0",
                  "1"
                ]
              }
            }
          }
        }
      }
    },
    "/tags/list": {
      "get": {
        "summary": "Retrieve data of Tags - list",
        "description": "Use this API to retrieve data of tags - list.",
        "operationId": "tags/list",
        "tags": [
          "Tags"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Tags list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string",
                      "example": "Tags list"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "description": "Total of the meta data.",
                          "type": "number",
                          "example": 19
                        },
                        "page": {
                          "description": "Page of the meta data.",
                          "type": "number",
                          "example": 1
                        },
                        "limit": {
                          "description": "Limit of the meta data.",
                          "type": "number",
                          "example": 10
                        },
                        "base_url": {
                          "description": "Base_url of the meta data.",
                          "type": "object",
                          "example": {
                            "table_photo": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/photo/tables/",
                            "table_video": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/video/tables/"
                          }
                        },
                        "table_photo": {
                          "description": "Table_photo of the meta data.",
                          "type": "object",
                          "example": {
                            "hd": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/photo/tables/hd/",
                            "standardResolution": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/photo/tables/standardResolution/"
                          }
                        },
                        "table_video": {
                          "description": "Table_video of the meta data.",
                          "type": "object",
                          "example": {
                            "hd": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/video/tables/hd/",
                            "standardResolution": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/video/tables/standardResolution/"
                          }
                        },
                        "profile_photo": {
                          "description": "Profile_photo of the meta data.",
                          "type": "string",
                          "example": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/photo/members/"
                        },
                        "category_photo": {
                          "description": "Category_photo of the meta data.",
                          "type": "string",
                          "example": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/image/interests/"
                        }
                      }
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Id of the item.",
                            "type": "number",
                            "example": 1
                          },
                          "tags": {
                            "description": "Tags of the item.",
                            "type": "string",
                            "example": "Beginners"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "You don't have permission to perform this action"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "required": [
                  "0",
                  "1"
                ]
              }
            }
          }
        }
      }
    },
    "/interests/create": {
      "post": {
        "summary": "Create Interests",
        "description": "Create a new **Interests** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "Interests"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **Interests** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/interests"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the Interests instance to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/interests"
              }
            }
          }
        }
      }
    },
    "/interests/image-upload": {
      "post": {
        "summary": "/interests/image-upload",
        "tags": [
          "Interests"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/interests/list": {
      "get": {
        "summary": "Retrieve data of Interests - list",
        "description": "Use this API to retrieve data of interests - list.",
        "operationId": "interests/list",
        "tags": [
          "Interests"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "No Items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string",
                      "example": "No Items"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "description": "Total of the meta data.",
                          "type": "number",
                          "example": 7
                        },
                        "page": {
                          "description": "Page of the meta data.",
                          "type": "number",
                          "example": 5
                        },
                        "limit": {
                          "description": "Limit of the meta data.",
                          "type": "number",
                          "example": 10
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "You don't have permission to perform this action"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "required": [
                  "0",
                  "1"
                ]
              }
            }
          }
        }
      }
    },
    "/standard-table/set-price": {
      "post": {
        "summary": "/standard-table/set-price",
        "tags": [
          "set-price"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/standard-table/view-price": {
      "get": {
        "summary": "/standard-table/view-price",
        "tags": [
          "view-price"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tables/list": {
      "get": {
        "summary": "Retrieve data of Tables - list",
        "description": "Use this API to retrieve data of tables - list.",
        "operationId": "tables/list",
        "tags": [
          "Tables"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Tables list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string",
                      "example": "Tables list"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "description": "Total of the meta data.",
                          "type": "number",
                          "example": 0
                        },
                        "page": {
                          "description": "Page of the meta data.",
                          "type": "number",
                          "example": 1
                        },
                        "limit": {
                          "description": "Limit of the meta data.",
                          "type": "number",
                          "example": 10
                        },
                        "base_url": {
                          "description": "Base_url of the meta data.",
                          "type": "object",
                          "example": {
                            "table_photo": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/photo/tables/",
                            "table_video": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/video/tables/"
                          }
                        },
                        "table_photo": {
                          "description": "Table_photo of the meta data.",
                          "type": "object",
                          "example": {
                            "hd": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/photo/tables/hd/",
                            "standardResolution": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/photo/tables/standardResolution/"
                          }
                        },
                        "table_video": {
                          "description": "Table_video of the meta data.",
                          "type": "object",
                          "example": {
                            "hd": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/video/tables/hd/",
                            "standardResolution": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/video/tables/standardResolution/"
                          }
                        },
                        "profile_photo": {
                          "description": "Profile_photo of the meta data.",
                          "type": "string",
                          "example": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/photo/members/"
                        },
                        "category_photo": {
                          "description": "Category_photo of the meta data.",
                          "type": "string",
                          "example": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/image/interests/"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "You don't have permission to perform this action"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "required": [
                  "0",
                  "1"
                ]
              }
            }
          }
        }
      }
    },
    "/tables/my-list": {
      "get": {
        "summary": "Retrieve data of Tables - my-list",
        "description": "Use this API to retrieve data of tables - my-list.",
        "operationId": "tables/my-list",
        "tags": [
          "Tables"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Request form list retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string",
                      "example": "Request form list retrieved successfully."
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "description": "Count of the meta data.",
                          "type": "number",
                          "example": 2
                        },
                        "total": {
                          "description": "Total of the meta data.",
                          "type": "number",
                          "example": 2
                        },
                        "page": {
                          "description": "Page of the meta data.",
                          "type": "number",
                          "example": 1
                        },
                        "limit": {
                          "description": "Limit of the meta data.",
                          "type": "number",
                          "example": 10
                        },
                        "base_url": {
                          "description": "Base_url of the meta data.",
                          "type": "object",
                          "example": {
                            "table_photo": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/photo/tables/",
                            "table_video": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/video/tables/"
                          }
                        },
                        "table_photo": {
                          "description": "Table_photo of the meta data.",
                          "type": "object",
                          "example": {
                            "hd": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/photo/tables/hd/",
                            "standardResolution": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/photo/tables/standardResolution/"
                          }
                        },
                        "table_video": {
                          "description": "Table_video of the meta data.",
                          "type": "object",
                          "example": {
                            "hd": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/video/tables/hd/",
                            "standardResolution": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/video/tables/standardResolution/"
                          }
                        },
                        "profile_photo": {
                          "description": "Profile_photo of the meta data.",
                          "type": "string",
                          "example": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/photo/members/"
                        },
                        "category_photo": {
                          "description": "Category_photo of the meta data.",
                          "type": "string",
                          "example": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/image/interests/"
                        }
                      }
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "created_at": {
                            "description": "Created_at of the item.",
                            "type": "object",
                            "example": "2024-12-07T06:23:41.021Z"
                          },
                          "updated_at": {
                            "description": "Updated_at of the item.",
                            "type": "object",
                            "example": "2024-12-08T05:30:00.590Z"
                          },
                          "id": {
                            "description": "Id of the item.",
                            "type": "string",
                            "example": "2"
                          },
                          "full_name": {
                            "description": "Full_name of the item.",
                            "type": "string",
                            "example": "Backend User "
                          },
                          "type": {
                            "description": "Type of the item.",
                            "type": "number",
                            "example": 2
                          },
                          "media": {
                            "description": "Media of the item.",
                            "type": "object",
                            "example": null
                          },
                          "video": {
                            "description": "Video of the item.",
                            "type": "object",
                            "example": null
                          },
                          "description": {
                            "description": "Description of the item.",
                            "type": "string",
                            "example": "Understand how blockchain can impact large enterprises."
                          },
                          "phone": {
                            "description": "Phone of the item.",
                            "type": "string",
                            "example": ""
                          },
                          "min_seats": {
                            "description": "Min_seats of the item.",
                            "type": "number",
                            "example": 5
                          },
                          "max_seats": {
                            "description": "Max_seats of the item.",
                            "type": "number",
                            "example": 5
                          },
                          "booked_seats": {
                            "description": "Booked_seats of the item.",
                            "type": "number",
                            "example": 0
                          },
                          "booked": {
                            "description": "Booked of the item.",
                            "type": "number",
                            "example": 0
                          },
                          "bookmarks": {
                            "description": "Bookmarks of the item.",
                            "type": "number",
                            "example": 0
                          },
                          "followers": {
                            "description": "Followers of the item.",
                            "type": "number",
                            "example": 0
                          },
                          "title": {
                            "description": "Title of the item.",
                            "type": "string",
                            "example": "Testing-002"
                          },
                          "price": {
                            "description": "Price of the item.",
                            "type": "number",
                            "example": 5
                          },
                          "tags": {
                            "description": "Tags of the item.",
                            "type": "string",
                            "example": "Experts"
                          },
                          "address": {
                            "description": "Address of the item.",
                            "type": "string",
                            "example": "Brahma Brews, 24th Main Road, Achappa Layout, Ramaiah Garden, JP Nagar 7th Phase, J. P. Nagar, Bengaluru, Karnataka, India"
                          },
                          "city": {
                            "description": "City of the item.",
                            "type": "string",
                            "example": "Bengaluru"
                          },
                          "event_date": {
                            "description": "Event_date of the item.",
                            "type": "string",
                            "example": "08-12-2024 13:00"
                          },
                          "reviews": {
                            "description": "Reviews of the item.",
                            "type": "number",
                            "example": 0
                          },
                          "user_type": {
                            "description": "User_type of the item.",
                            "type": "number",
                            "example": 2
                          },
                          "status": {
                            "description": "Status of the item.",
                            "type": "number",
                            "example": 34
                          },
                          "admin_id": {
                            "description": "Admin_id of the item.",
                            "type": "number",
                            "example": 0
                          },
                          "event_done_flag": {
                            "description": "Event_done_flag of the item.",
                            "type": "boolean",
                            "example": false
                          },
                          "state": {
                            "description": "State of the item.",
                            "type": "string",
                            "example": "Karnataka"
                          },
                          "district": {
                            "description": "District of the item.",
                            "type": "string",
                            "example": "Bengaluru Urban"
                          },
                          "pincode": {
                            "description": "Pincode of the item.",
                            "type": "string",
                            "example": "560078"
                          },
                          "order_by": {
                            "description": "Order_by of the item.",
                            "type": "string",
                            "example": ""
                          },
                          "table_expense": {
                            "description": "Table_expense of the item.",
                            "type": "number",
                            "example": 1
                          },
                          "location_details": {
                            "description": "Location_details of the item.",
                            "type": "object",
                            "example": {
                              "country": "India",
                              "locality": "Bengaluru",
                              "political": "India",
                              "postal_code": "560078",
                              "sublocality_level_1": "7",
                              "sublocality_level_2": "JP Nagar 7th Phase",
                              "sublocality_level_3": "Silver Oak Layout",
                              "administrative_area_level_2": "Bangalore Division",
                              "administrative_area_level_3": "Bengaluru Urban"
                            }
                          },
                          "location": {
                            "description": "Location of the item.",
                            "type": "object",
                            "example": {
                              "lat": 12.8933351,
                              "lng": 77.5864716
                            }
                          },
                          "inclusion": {
                            "description": "Inclusion of the item.",
                            "type": "object",
                            "example": null
                          },
                          "exclusions": {
                            "description": "Exclusions of the item.",
                            "type": "object",
                            "example": null
                          },
                          "format_geo_address": {
                            "description": "Format_geo_address of the item.",
                            "type": "string",
                            "example": "Achappa Layout, Silver Oak Layout, JP Nagar th Phase, Bengaluru, Karnataka, India"
                          },
                          "category": {
                            "description": "Category of the item.",
                            "type": "object",
                            "example": null
                          },
                          "created_by": {
                            "description": "Created_by of the item.",
                            "type": "number",
                            "example": 1290
                          },
                          "user_profile": {
                            "description": "User_profile of the item.",
                            "type": "number",
                            "example": 1290
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "You don't have permission to perform this action"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "required": [
                  "0",
                  "1"
                ]
              }
            }
          }
        }
      }
    },
    "/tables/high-booked": {
      "get": {
        "summary": "Retrieve data of Tables - high-booked",
        "description": "Use this API to retrieve data of tables - high-booked.",
        "operationId": "tables/high-booked",
        "tags": [
          "Tables"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Request form list retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string",
                      "example": "Request form list retrieved successfully."
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "description": "Count of the meta data.",
                          "type": "number",
                          "example": 0
                        },
                        "total": {
                          "description": "Total of the meta data.",
                          "type": "undefined"
                        },
                        "page": {
                          "description": "Page of the meta data.",
                          "type": "number",
                          "example": 1
                        },
                        "limit": {
                          "description": "Limit of the meta data.",
                          "type": "number",
                          "example": 7
                        },
                        "base_url": {
                          "description": "Base_url of the meta data.",
                          "type": "object",
                          "example": {
                            "table_photo": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/photo/tables/",
                            "table_video": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/video/tables/"
                          }
                        },
                        "table_photo": {
                          "description": "Table_photo of the meta data.",
                          "type": "object",
                          "example": {
                            "hd": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/photo/tables/hd/",
                            "standardResolution": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/photo/tables/standardResolution/"
                          }
                        },
                        "table_video": {
                          "description": "Table_video of the meta data.",
                          "type": "object",
                          "example": {
                            "hd": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/video/tables/hd/",
                            "standardResolution": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/video/tables/standardResolution/"
                          }
                        },
                        "profile_photo": {
                          "description": "Profile_photo of the meta data.",
                          "type": "string",
                          "example": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/photo/members/"
                        },
                        "category_photo": {
                          "description": "Category_photo of the meta data.",
                          "type": "string",
                          "example": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/image/interests/"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "You don't have permission to perform this action"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "required": [
                  "0"
                ]
              }
            }
          }
        }
      }
    },
    "/tables/view": {
      "get": {
        "summary": "Retrieve data of Tables - view",
        "description": "Use this API to retrieve data of tables - view.",
        "operationId": "tables/view",
        "tags": [
          "Tables"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string",
                      "example": "Operation completed successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "You don't have permission to perform this action"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "Id of the request.",
                    "type": "integer",
                    "example": 1,
                    "minimum": 1
                  }
                },
                "required": [
                  "0"
                ]
              }
            }
          }
        }
      }
    },
    "/tables/view-web": {
      "get": {
        "summary": "/tables/view-web",
        "tags": [
          "Tables"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tables/table-search": {
      "post": {
        "summary": "Retrieve data of Tables - table-search",
        "description": "Use this API to retrieve data of tables - table-search.",
        "operationId": "tables/table-search",
        "tags": [
          "Tables"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Request form list retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string",
                      "example": "Request form list retrieved successfully."
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "description": "Total of the meta data.",
                          "type": "number",
                          "example": 0
                        },
                        "page": {
                          "description": "Page of the meta data.",
                          "type": "number",
                          "example": 1
                        },
                        "limit": {
                          "description": "Limit of the meta data.",
                          "type": "number",
                          "example": 10
                        },
                        "base_url": {
                          "description": "Base_url of the meta data.",
                          "type": "object",
                          "example": {
                            "table_photo": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/photo/tables/",
                            "table_video": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/video/tables/"
                          }
                        },
                        "table_photo": {
                          "description": "Table_photo of the meta data.",
                          "type": "object",
                          "example": {
                            "hd": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/photo/tables/hd/",
                            "standardResolution": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/photo/tables/standardResolution/"
                          }
                        },
                        "table_video": {
                          "description": "Table_video of the meta data.",
                          "type": "object",
                          "example": {
                            "hd": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/video/tables/hd/",
                            "standardResolution": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/video/tables/standardResolution/"
                          }
                        },
                        "profile_photo": {
                          "description": "Profile_photo of the meta data.",
                          "type": "string",
                          "example": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/photo/members/"
                        },
                        "category_photo": {
                          "description": "Category_photo of the meta data.",
                          "type": "string",
                          "example": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/image/interests/"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "You don't have permission to perform this action"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "required": [
                  "0",
                  "1"
                ]
              }
            }
          }
        }
      }
    },
    "/tables/media-upload": {
      "post": {
        "summary": "/tables/media-upload",
        "tags": [
          "Tables"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tables/video-upload": {
      "post": {
        "summary": "/tables/video-upload",
        "tags": [
          "Tables"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tables/create": {
      "post": {
        "summary": "Create a table Tables - create",
        "description": "Use this API to create a table tables - create.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "operationId": "tables/create",
        "tags": [
          "Tables"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Data created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string",
                      "example": "Data created successfully."
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "thumbnail": {
                          "description": "Thumbnail of the details.",
                          "type": "object",
                          "example": null
                        },
                        "status_glossary": {
                          "description": "Status_glossary of the details.",
                          "type": "object",
                          "example": null
                        },
                        "flags": {
                          "description": "Flags of the details.",
                          "type": "object",
                          "example": null
                        },
                        "tables_info": {
                          "description": "Tables_info of the details.",
                          "type": "object",
                          "example": null
                        },
                        "created_at": {
                          "description": "Created_at of the details.",
                          "type": "object",
                          "example": "2024-12-09T14:15:18.578Z"
                        },
                        "updated_at": {
                          "description": "Updated_at of the details.",
                          "type": "object",
                          "example": "2024-12-09T14:15:18.578Z"
                        },
                        "id": {
                          "description": "Id of the details.",
                          "type": "string",
                          "example": "903"
                        },
                        "full_name": {
                          "description": "Full_name of the details.",
                          "type": "string",
                          "example": "Backend User "
                        },
                        "type": {
                          "description": "Type of the details.",
                          "type": "number",
                          "example": 2
                        },
                        "media": {
                          "description": "Media of the details.",
                          "type": "object",
                          "example": null
                        },
                        "video": {
                          "description": "Video of the details.",
                          "type": "object",
                          "example": null
                        },
                        "description": {
                          "description": "Description of the details.",
                          "type": "string",
                          "example": "Understand how blockchain can impact large enterprises."
                        },
                        "phone": {
                          "description": "Phone of the details.",
                          "type": "string",
                          "example": ""
                        },
                        "min_seats": {
                          "description": "Min_seats of the details.",
                          "type": "number",
                          "example": 5
                        },
                        "max_seats": {
                          "description": "Max_seats of the details.",
                          "type": "number",
                          "example": 5
                        },
                        "booked_seats": {
                          "description": "Booked_seats of the details.",
                          "type": "number",
                          "example": 0
                        },
                        "booked": {
                          "description": "Booked of the details.",
                          "type": "number",
                          "example": 0
                        },
                        "bookmarks": {
                          "description": "Bookmarks of the details.",
                          "type": "number",
                          "example": 0
                        },
                        "followers": {
                          "description": "Followers of the details.",
                          "type": "number",
                          "example": 0
                        },
                        "title": {
                          "description": "Title of the details.",
                          "type": "string",
                          "example": "Testing Date-002"
                        },
                        "price": {
                          "description": "Price of the details.",
                          "type": "number",
                          "example": 5
                        },
                        "tags": {
                          "description": "Tags of the details.",
                          "type": "string",
                          "example": "Experts"
                        },
                        "address": {
                          "description": "Address of the details.",
                          "type": "string",
                          "example": "Brahma Brews, 24th Main Road, Achappa Layout, Ramaiah Garden, JP Nagar 7th Phase, J. P. Nagar, Bengaluru, Karnataka, India"
                        },
                        "city": {
                          "description": "City of the details.",
                          "type": "string",
                          "example": "JP Nagar 7th Phase"
                        },
                        "event_date": {
                          "description": "Event_date of the details.",
                          "type": "string",
                          "example": "2024-12-10 13:00"
                        },
                        "reviews": {
                          "description": "Reviews of the details.",
                          "type": "number",
                          "example": 0
                        },
                        "user_type": {
                          "description": "User_type of the details.",
                          "type": "number",
                          "example": 12313
                        },
                        "status": {
                          "description": "Status of the details.",
                          "type": "number",
                          "example": 2
                        },
                        "admin_id": {
                          "description": "Admin_id of the details.",
                          "type": "number",
                          "example": 0
                        },
                        "event_done_flag": {
                          "description": "Event_done_flag of the details.",
                          "type": "boolean",
                          "example": false
                        },
                        "state": {
                          "description": "State of the details.",
                          "type": "string",
                          "example": "Bengaluru Urban"
                        },
                        "district": {
                          "description": "District of the details.",
                          "type": "string",
                          "example": "Bengaluru"
                        },
                        "pincode": {
                          "description": "Pincode of the details.",
                          "type": "string",
                          "example": "560078"
                        },
                        "order_by": {
                          "description": "Order_by of the details.",
                          "type": "string",
                          "example": ""
                        },
                        "table_expense": {
                          "description": "Table_expense of the details.",
                          "type": "number",
                          "example": 1
                        },
                        "location_details": {
                          "description": "Location_details of the details.",
                          "type": "object",
                          "example": {
                            "country": "India",
                            "locality": "Bengaluru",
                            "political": "India",
                            "postal_code": "560078",
                            "sublocality_level_1": "7",
                            "sublocality_level_2": "JP Nagar 7th Phase",
                            "sublocality_level_3": "Silver Oak Layout",
                            "administrative_area_level_2": "Bangalore Division",
                            "administrative_area_level_3": "Bengaluru Urban"
                          }
                        },
                        "location": {
                          "description": "Location of the details.",
                          "type": "object",
                          "example": {
                            "lat": 12.8933351,
                            "lng": 77.5864716
                          }
                        },
                        "inclusion": {
                          "description": "Inclusion of the details.",
                          "type": "object",
                          "example": null
                        },
                        "exclusions": {
                          "description": "Exclusions of the details.",
                          "type": "object",
                          "example": null
                        },
                        "format_geo_address": {
                          "description": "Format_geo_address of the details.",
                          "type": "string",
                          "example": ""
                        },
                        "category": {
                          "description": "Category of the details.",
                          "type": "string",
                          "example": "53"
                        },
                        "created_by": {
                          "description": "Created_by of the details.",
                          "type": "number",
                          "example": 1290
                        },
                        "user_profile": {
                          "description": "User_profile of the details.",
                          "type": "number",
                          "example": 1290
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "You don't have permission to perform this action"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "description": "Type of the request.",
                    "type": "number",
                    "example": 1
                  },
                  "description": {
                    "description": "Description of the request.",
                    "type": "string",
                    "example": "Capture the wild beauty of nature at Guindy National Park."
                  },
                  "title": {
                    "description": "Title of the request.",
                    "type": "string",
                    "example": "Prd APi 003"
                  },
                  "min_seats": {
                    "description": "Min_seats of the request.",
                    "type": "number",
                    "example": 5
                  },
                  "max_seats": {
                    "description": "Max_seats of the request.",
                    "type": "number",
                    "example": 5
                  },
                  "category": {
                    "description": "Category of the request.",
                    "type": "string",
                    "example": "35"
                  },
                  "tags": {
                    "description": "Tags of the request.",
                    "type": "string",
                    "example": "Business"
                  },
                  "event_date": {
                    "description": "Event_date of the request.",
                    "type": "string",
                    "example": "2024-10-04T00:30:00.000Z"
                  },
                  "status": {
                    "description": "Status of the request.",
                    "type": "number",
                    "example": 3
                  },
                  "location": {
                    "description": "Location of the request.",
                    "type": "object",
                    "example": {
                      "lat": 11.0168,
                      "lng": 76.9558
                    }
                  },
                  "user_type": {
                    "description": "User_type of the request.",
                    "type": "number",
                    "example": 2
                  },
                  "table_expense": {
                    "description": "Table_expense of the request.",
                    "type": "number",
                    "example": 1
                  },
                  "price": {
                    "description": "Price of the request.",
                    "type": "number",
                    "example": 99
                  }
                },
                "required": [
                  "0",
                  "1",
                  "2",
                  "3",
                  "4",
                  "5",
                  "6",
                  "7",
                  "8",
                  "9",
                  "10",
                  "11",
                  "12",
                  "13",
                  "14",
                  "15",
                  "16",
                  "17",
                  "18",
                  "19",
                  "20",
                  "21",
                  "22",
                  "23",
                  "24",
                  "25",
                  "26",
                  "27",
                  "28"
                ]
              }
            }
          }
        }
      }
    },
    "/tables/table-status": {
      "post": {
        "summary": "/tables/table-status",
        "tags": [
          "Tables"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tables/event-status-host": {
      "put": {
        "summary": "/tables/event-status-host",
        "tags": [
          "Tables"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tables/event-status-user": {
      "put": {
        "summary": "/tables/event-status-user",
        "tags": [
          "Tables"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tables/cancel-table": {
      "put": {
        "summary": "Delete data of Tables - cancel-table",
        "description": "Use this API to delete data of tables - cancel-table.",
        "operationId": "tables/cancel-table",
        "tags": [
          "Tables"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string",
                      "example": "Deleted successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "You don't have permission to perform this action"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "Status of the request.",
                    "type": "number",
                    "example": 3,
                    "minimum": 6
                  }
                },
                "required": [
                  "0",
                  "1"
                ]
              }
            }
          }
        }
      }
    },
    "/tables/list-feature-table-public": {
      "get": {
        "summary": "Retrieve data of Tables - list-feature-table-public",
        "description": "Use this API to retrieve data of tables - list-feature-table-public.",
        "operationId": "tables/list-feature-table-public",
        "tags": [
          "Tables"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Request form list retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string",
                      "example": "Request form list retrieved successfully."
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "description": "Count of the meta data.",
                          "type": "number",
                          "example": 5
                        },
                        "total": {
                          "description": "Total of the meta data.",
                          "type": "undefined"
                        },
                        "page": {
                          "description": "Page of the meta data.",
                          "type": "number",
                          "example": 1
                        },
                        "limit": {
                          "description": "Limit of the meta data.",
                          "type": "number",
                          "example": 7
                        },
                        "base_url": {
                          "description": "Base_url of the meta data.",
                          "type": "object",
                          "example": {
                            "table_photo": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/photo/tables/",
                            "table_video": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/video/tables/"
                          }
                        },
                        "table_photo": {
                          "description": "Table_photo of the meta data.",
                          "type": "object",
                          "example": {
                            "hd": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/photo/tables/hd/",
                            "standardResolution": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/photo/tables/standardResolution/"
                          }
                        },
                        "table_video": {
                          "description": "Table_video of the meta data.",
                          "type": "object",
                          "example": {
                            "hd": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/video/tables/hd/",
                            "standardResolution": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/video/tables/standardResolution/"
                          }
                        },
                        "profile_photo": {
                          "description": "Profile_photo of the meta data.",
                          "type": "string",
                          "example": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/photo/members/"
                        },
                        "category_photo": {
                          "description": "Category_photo of the meta data.",
                          "type": "string",
                          "example": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/image/interests/"
                        }
                      }
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "created_at": {
                            "description": "Created_at of the item.",
                            "type": "object",
                            "example": "2024-11-14T11:00:00.386Z"
                          },
                          "updated_at": {
                            "description": "Updated_at of the item.",
                            "type": "object",
                            "example": "2024-11-22T08:31:50.075Z"
                          },
                          "id": {
                            "description": "Id of the item.",
                            "type": "string",
                            "example": "588"
                          },
                          "full_name": {
                            "description": "Full_name of the item.",
                            "type": "string",
                            "example": "Staging user 1 "
                          },
                          "type": {
                            "description": "Type of the item.",
                            "type": "number",
                            "example": 2
                          },
                          "media": {
                            "description": "Media of the item.",
                            "type": "string",
                            "example": "image-1_1.webp"
                          },
                          "video": {
                            "description": "Video of the item.",
                            "type": "object",
                            "example": null
                          },
                          "description": {
                            "description": "Description of the item.",
                            "type": "string",
                            "example": "Understand how blockchain can impact large enterprises."
                          },
                          "phone": {
                            "description": "Phone of the item.",
                            "type": "string",
                            "example": ""
                          },
                          "min_seats": {
                            "description": "Min_seats of the item.",
                            "type": "number",
                            "example": 5
                          },
                          "max_seats": {
                            "description": "Max_seats of the item.",
                            "type": "number",
                            "example": 5
                          },
                          "booked_seats": {
                            "description": "Booked_seats of the item.",
                            "type": "number",
                            "example": 0
                          },
                          "booked": {
                            "description": "Booked of the item.",
                            "type": "number",
                            "example": 0
                          },
                          "bookmarks": {
                            "description": "Bookmarks of the item.",
                            "type": "number",
                            "example": 0
                          },
                          "followers": {
                            "description": "Followers of the item.",
                            "type": "number",
                            "example": 0
                          },
                          "title": {
                            "description": "Title of the item.",
                            "type": "string",
                            "example": "Table Dec 06"
                          },
                          "price": {
                            "description": "Price of the item.",
                            "type": "number",
                            "example": 201
                          },
                          "tags": {
                            "description": "Tags of the item.",
                            "type": "string",
                            "example": "Experts"
                          },
                          "address": {
                            "description": "Address of the item.",
                            "type": "string",
                            "example": "Whitefield, Bengaluru"
                          },
                          "city": {
                            "description": "City of the item.",
                            "type": "string",
                            "example": "Bengaluru"
                          },
                          "event_date": {
                            "description": "Event_date of the item.",
                            "type": "string",
                            "example": "06-12-2024 08:00"
                          },
                          "reviews": {
                            "description": "Reviews of the item.",
                            "type": "number",
                            "example": 0
                          },
                          "user_type": {
                            "description": "User_type of the item.",
                            "type": "number",
                            "example": 2
                          },
                          "status": {
                            "description": "Status of the item.",
                            "type": "number",
                            "example": 3
                          },
                          "admin_id": {
                            "description": "Admin_id of the item.",
                            "type": "number",
                            "example": 0
                          },
                          "event_done_flag": {
                            "description": "Event_done_flag of the item.",
                            "type": "boolean",
                            "example": false
                          },
                          "state": {
                            "description": "State of the item.",
                            "type": "string",
                            "example": "Karnataka"
                          },
                          "district": {
                            "description": "District of the item.",
                            "type": "string",
                            "example": "Bengaluru Urban"
                          },
                          "pincode": {
                            "description": "Pincode of the item.",
                            "type": "string",
                            "example": "560002"
                          },
                          "order_by": {
                            "description": "Order_by of the item.",
                            "type": "string",
                            "example": "01"
                          },
                          "table_expense": {
                            "description": "Table_expense of the item.",
                            "type": "number",
                            "example": 1
                          },
                          "location_details": {
                            "description": "Location_details of the item.",
                            "type": "object",
                            "example": {
                              "country": {
                                "long_name": "India",
                                "short_name": "IN"
                              },
                              "locality": "Bengaluru",
                              "postal_code": "560002",
                              "sublocality_level_2": "D' Souza Layout",
                              "sublocality_level_3": "KG Halli",
                              "administrative_area_level_1": {
                                "long_name": "Karnataka",
                                "short_name": "KA"
                              },
                              "administrative_area_level_2": "Bangalore Division",
                              "administrative_area_level_3": "Bengaluru Urban"
                            }
                          },
                          "location": {
                            "description": "Location of the item.",
                            "type": "object",
                            "example": {
                              "lat": 12.9716,
                              "lng": 77.5946
                            }
                          },
                          "inclusion": {
                            "description": "Inclusion of the item.",
                            "type": "string",
                            "example": ""
                          },
                          "exclusions": {
                            "description": "Exclusions of the item.",
                            "type": "string",
                            "example": ""
                          },
                          "format_geo_address": {
                            "description": "Format_geo_address of the item.",
                            "type": "string",
                            "example": "KG Halli, D' Souza Layout, Ashok Nagar, Bengaluru, Karnataka, India"
                          },
                          "category": {
                            "description": "Category of the item.",
                            "type": "object",
                            "example": null
                          },
                          "created_by": {
                            "description": "Created_by of the item.",
                            "type": "number",
                            "example": 1001
                          },
                          "user_profile": {
                            "description": "User_profile of the item.",
                            "type": "object",
                            "example": {
                              "created_at": "2024-11-14T05:15:50.733Z",
                              "updated_at": "2024-11-28T07:00:31.097Z",
                              "id": 1001,
                              "email": "sathish11@gmail.com",
                              "first_name": "Staging user 1",
                              "last_name": "",
                              "description": "",
                              "photo": "",
                              "phone": "98fbee56bb61192c8bdb5d11401a4992",
                              "street": "",
                              "address": "",
                              "city": "",
                              "state": "",
                              "postal_code": "",
                              "status": 1,
                              "status_glossary": "",
                              "about_me": "",
                              "one_signal_push_tokens": null,
                              "tokens": null,
                              "last_active": null,
                              "last_checkin_via": "",
                              "facebook_id": null,
                              "facebook_data": {
                                "facebook_id": "122133156758193230",
                                "first_name": "Anil",
                                "last_name": "Shetty",
                                "email": "hightableai@yahoo.com",
                                "picture": "https://scontent.xx.fbcdn.net/v/t1.30497-1/84628273_176159830277856_972693363922829312_n.jpg?stp=c379.0.1290.1290a_dst-jpg_s960x960&_nc_cat=1&ccb=1-7&_nc_sid=7565cd&_nc_ohc=6q_7bTxgtc8Q7kNvgESfxtW&_nc_zt=24&_nc_ht=scontent.xx&edm=AP4hL3IEAAAA&_nc_gid=A6M6aujpkcmND2nxvKMk85U&oh=00_AYDVrwi74855Qd3befLHmC0bePgivJeSNzstxSv-fSkvxw&oe=67625AD9"
                              },
                              "linkedin_id": null,
                              "linkedin_data": null,
                              "interests": null,
                              "followers": 0,
                              "google_id": null,
                              "google_data": null,
                              "otp_session_id": null,
                              "reviews": 1,
                              "reviews_count": 3,
                              "linked_account_id": "",
                              "linked_product_id": "",
                              "pronoun": "",
                              "instagram_data": null,
                              "instagram_link": "",
                              "linkedin_link": "",
                              "x_link": "",
                              "x_data": null,
                              "table_count": 16,
                              "booked": 2,
                              "age": 0,
                              "gender": "",
                              "account_details": null,
                              "profile_completion_status": [
                                40
                              ],
                              "uu_id": "MiBapPzz22",
                              "account": 111
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "You don't have permission to perform this action"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "required": [
                  "0"
                ]
              }
            }
          }
        }
      }
    },
    "/tables/list-public": {
      "get": {
        "summary": "Retrieve data of Tables - list-public",
        "description": "Use this API to retrieve data of tables - list-public.",
        "operationId": "tables/list-public",
        "tags": [
          "Tables"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Request for list retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string",
                      "example": "Request for list retrieved successfully."
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "description": "Total of the meta data.",
                          "type": "number",
                          "example": 5
                        },
                        "page": {
                          "description": "Page of the meta data.",
                          "type": "number",
                          "example": 1
                        },
                        "limit": {
                          "description": "Limit of the meta data.",
                          "type": "number",
                          "example": 10
                        },
                        "base_url": {
                          "description": "Base_url of the meta data.",
                          "type": "object",
                          "example": {
                            "table_photo": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/photo/tables/",
                            "table_video": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/video/tables/"
                          }
                        },
                        "table_photo": {
                          "description": "Table_photo of the meta data.",
                          "type": "object",
                          "example": {
                            "hd": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/photo/tables/hd/",
                            "standardResolution": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/photo/tables/standardResolution/"
                          }
                        },
                        "table_video": {
                          "description": "Table_video of the meta data.",
                          "type": "object",
                          "example": {
                            "hd": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/video/tables/hd/",
                            "standardResolution": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/video/tables/standardResolution/"
                          }
                        },
                        "profile_photo": {
                          "description": "Profile_photo of the meta data.",
                          "type": "string",
                          "example": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/photo/members/"
                        },
                        "category_photo": {
                          "description": "Category_photo of the meta data.",
                          "type": "string",
                          "example": "https://s3.ap-south-1.amazonaws.com/high-table-2024/public/image/interests/"
                        }
                      }
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "created_at": {
                            "description": "Created_at of the item.",
                            "type": "object",
                            "example": "2024-11-27T03:44:32.863Z"
                          },
                          "updated_at": {
                            "description": "Updated_at of the item.",
                            "type": "object",
                            "example": "2024-11-27T03:50:25.729Z"
                          },
                          "id": {
                            "description": "Id of the item.",
                            "type": "string",
                            "example": "643"
                          },
                          "full_name": {
                            "description": "Full_name of the item.",
                            "type": "string",
                            "example": "Staging user 1 "
                          },
                          "type": {
                            "description": "Type of the item.",
                            "type": "number",
                            "example": 2
                          },
                          "media": {
                            "description": "Media of the item.",
                            "type": "string",
                            "example": "image-643_1.webp"
                          },
                          "video": {
                            "description": "Video of the item.",
                            "type": "object",
                            "example": null
                          },
                          "description": {
                            "description": "Description of the item.",
                            "type": "string",
                            "example": "Test"
                          },
                          "phone": {
                            "description": "Phone of the item.",
                            "type": "string",
                            "example": ""
                          },
                          "min_seats": {
                            "description": "Min_seats of the item.",
                            "type": "number",
                            "example": 4
                          },
                          "max_seats": {
                            "description": "Max_seats of the item.",
                            "type": "number",
                            "example": 4
                          },
                          "booked_seats": {
                            "description": "Booked_seats of the item.",
                            "type": "number",
                            "example": 1
                          },
                          "booked": {
                            "description": "Booked of the item.",
                            "type": "number",
                            "example": 1
                          },
                          "bookmarks": {
                            "description": "Bookmarks of the item.",
                            "type": "number",
                            "example": 0
                          },
                          "followers": {
                            "description": "Followers of the item.",
                            "type": "number",
                            "example": 0
                          },
                          "title": {
                            "description": "Title of the item.",
                            "type": "string",
                            "example": "Test 123"
                          },
                          "price": {
                            "description": "Price of the item.",
                            "type": "number",
                            "example": 564
                          },
                          "tags": {
                            "description": "Tags of the item.",
                            "type": "string",
                            "example": "Corporate"
                          },
                          "address": {
                            "description": "Address of the item.",
                            "type": "string",
                            "example": "Puducherry Beach, White Town, Puducherry, India"
                          },
                          "city": {
                            "description": "City of the item.",
                            "type": "string",
                            "example": "Puducherry"
                          },
                          "event_date": {
                            "description": "Event_date of the item.",
                            "type": "string",
                            "example": "28-11-2024 18:30"
                          },
                          "reviews": {
                            "description": "Reviews of the item.",
                            "type": "number",
                            "example": 0
                          },
                          "user_type": {
                            "description": "User_type of the item.",
                            "type": "number",
                            "example": 2
                          },
                          "status": {
                            "description": "Status of the item.",
                            "type": "number",
                            "example": 3
                          },
                          "admin_id": {
                            "description": "Admin_id of the item.",
                            "type": "number",
                            "example": 0
                          },
                          "event_done_flag": {
                            "description": "Event_done_flag of the item.",
                            "type": "boolean",
                            "example": false
                          },
                          "state": {
                            "description": "State of the item.",
                            "type": "string",
                            "example": "Puducherry"
                          },
                          "district": {
                            "description": "District of the item.",
                            "type": "string",
                            "example": "Puducherry"
                          },
                          "pincode": {
                            "description": "Pincode of the item.",
                            "type": "string",
                            "example": "605001"
                          },
                          "order_by": {
                            "description": "Order_by of the item.",
                            "type": "string",
                            "example": ""
                          },
                          "table_expense": {
                            "description": "Table_expense of the item.",
                            "type": "number",
                            "example": 0
                          },
                          "location_details": {
                            "description": "Location_details of the item.",
                            "type": "object",
                            "example": {
                              "country": {
                                "long_name": "India",
                                "short_name": "IN"
                              },
                              "locality": "Puducherry",
                              "political": {
                                "long_name": "India",
                                "short_name": "IN"
                              },
                              "postal_code": "605001",
                              "administrative_area_level_1": {
                                "long_name": "Puducherry",
                                "short_name": "PY"
                              },
                              "administrative_area_level_3": "Puducherry"
                            }
                          },
                          "location": {
                            "description": "Location of the item.",
                            "type": "object",
                            "example": {
                              "lat": 11.9353019,
                              "lng": 79.8364573
                            }
                          },
                          "inclusion": {
                            "description": "Inclusion of the item.",
                            "type": "string",
                            "example": "Test"
                          },
                          "exclusions": {
                            "description": "Exclusions of the item.",
                            "type": "string",
                            "example": "Test"
                          },
                          "format_geo_address": {
                            "description": "Format_geo_address of the item.",
                            "type": "string",
                            "example": "c, Goubert Ave, White Town, Puducherry, India"
                          },
                          "category": {
                            "description": "Category of the item.",
                            "type": "object",
                            "example": {
                              "created_at": "2024-09-18T09:41:14.192Z",
                              "updated_at": "2024-09-18T09:41:14.192Z",
                              "id": "5",
                              "name": "Books/Movies",
                              "image": "",
                              "width": 50,
                              "height": 50,
                              "status": 1,
                              "orderby": 5
                            }
                          },
                          "created_by": {
                            "description": "Created_by of the item.",
                            "type": "number",
                            "example": 1001
                          },
                          "user_profile": {
                            "description": "User_profile of the item.",
                            "type": "object",
                            "example": {
                              "created_at": "2024-11-14T05:15:50.733Z",
                              "updated_at": "2024-11-28T07:00:31.097Z",
                              "id": 1001,
                              "email": "sathish11@gmail.com",
                              "first_name": "Staging user 1",
                              "last_name": "",
                              "description": "",
                              "photo": "",
                              "phone": "98fbee56bb61192c8bdb5d11401a4992",
                              "street": "",
                              "address": "",
                              "city": "",
                              "state": "",
                              "postal_code": "",
                              "status": 1,
                              "status_glossary": "",
                              "about_me": "",
                              "one_signal_push_tokens": null,
                              "tokens": null,
                              "last_active": null,
                              "last_checkin_via": "",
                              "facebook_id": null,
                              "facebook_data": {
                                "facebook_id": "122133156758193230",
                                "first_name": "Anil",
                                "last_name": "Shetty",
                                "email": "hightableai@yahoo.com",
                                "picture": "https://scontent.xx.fbcdn.net/v/t1.30497-1/84628273_176159830277856_972693363922829312_n.jpg?stp=c379.0.1290.1290a_dst-jpg_s960x960&_nc_cat=1&ccb=1-7&_nc_sid=7565cd&_nc_ohc=6q_7bTxgtc8Q7kNvgESfxtW&_nc_zt=24&_nc_ht=scontent.xx&edm=AP4hL3IEAAAA&_nc_gid=A6M6aujpkcmND2nxvKMk85U&oh=00_AYDVrwi74855Qd3befLHmC0bePgivJeSNzstxSv-fSkvxw&oe=67625AD9"
                              },
                              "linkedin_id": null,
                              "linkedin_data": null,
                              "interests": null,
                              "followers": 0,
                              "google_id": null,
                              "google_data": null,
                              "otp_session_id": null,
                              "reviews": 1,
                              "reviews_count": 3,
                              "linked_account_id": "",
                              "linked_product_id": "",
                              "pronoun": "",
                              "instagram_data": null,
                              "instagram_link": "",
                              "linkedin_link": "",
                              "x_link": "",
                              "x_data": null,
                              "table_count": 16,
                              "booked": 2,
                              "age": 0,
                              "gender": "",
                              "account_details": null,
                              "profile_completion_status": [
                                40
                              ],
                              "uu_id": "MiBapPzz22",
                              "account": 111
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "You don't have permission to perform this action"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "required": [
                  "0",
                  "1"
                ]
              }
            }
          }
        }
      }
    },
    "/error-detail/list": {
      "get": {
        "summary": "/error-detail/list",
        "tags": [
          "list"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/table-booking/list": {
      "get": {
        "summary": "/table-booking/list",
        "tags": [
          "list"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/table-booking/booked-my-tables-user-list": {
      "get": {
        "summary": "/table-booking/booked-my-tables-user-list",
        "tags": [
          "booked-my-tables-user-list"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/table-booking/accept-booking": {
      "get": {
        "summary": "/table-booking/accept-booking",
        "tags": [
          "accept-booking"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/table-booking/booked-all-my-list": {
      "get": {
        "summary": "/table-booking/booked-all-my-list",
        "tags": [
          "booked-all-my-list"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/table-booking/book-table": {
      "post": {
        "summary": "/table-booking/book-table",
        "tags": [
          "book-table"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/table-booking/capture-payment": {
      "post": {
        "summary": "/table-booking/capture-payment",
        "tags": [
          "capture-payment"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/table-booking/refund-payment": {
      "post": {
        "summary": "/table-booking/refund-payment",
        "tags": [
          "refund-payment"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/table-booking/cancel-booking": {
      "post": {
        "summary": "/table-booking/cancel-booking",
        "tags": [
          "cancel-booking"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/reviews/give-feedback": {
      "post": {
        "summary": "Create a table Reviews - give-feedback",
        "description": "Use this API to create a table reviews - give-feedback.",
        "operationId": "reviews/give-feedback",
        "tags": [
          "Reviews"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string",
                      "example": "Operation completed successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "You don't have permission to perform this action"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "required": [
                  "0",
                  "1",
                  "2",
                  "3"
                ]
              }
            }
          }
        }
      }
    },
    "/bookmark/create": {
      "post": {
        "summary": "Create a table Bookmark - create",
        "description": "Use this API to create a table bookmark - create.",
        "operationId": "bookmark/create",
        "tags": [
          "Bookmark"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Data created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string",
                      "example": "Data created successfully."
                    },
                    "details": {
                      "type": "object",
                      "properties": {
                        "status_glossary": {
                          "description": "Status_glossary of the details.",
                          "type": "object",
                          "example": null
                        },
                        "created_at": {
                          "description": "Created_at of the details.",
                          "type": "object",
                          "example": "2024-12-09T10:24:10.211Z"
                        },
                        "updated_at": {
                          "description": "Updated_at of the details.",
                          "type": "object",
                          "example": "2024-12-09T10:24:10.211Z"
                        },
                        "id": {
                          "description": "Id of the details.",
                          "type": "string",
                          "example": "276"
                        },
                        "status": {
                          "description": "Status of the details.",
                          "type": "number",
                          "example": 22
                        },
                        "table_id": {
                          "description": "Table_id of the details.",
                          "type": "string",
                          "example": "11"
                        },
                        "creator_profile_id": {
                          "description": "Creator_profile_id of the details.",
                          "type": "number",
                          "example": 1293
                        },
                        "user_id": {
                          "description": "User_id of the details.",
                          "type": "number",
                          "example": 1293
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "You don't have permission to perform this action"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "required": [
                  "0"
                ]
              }
            }
          }
        }
      }
    },
    "/bookmark/list": {
      "get": {
        "summary": "Retrieve data of Bookmark - list",
        "description": "Use this API to retrieve data of bookmark - list.",
        "operationId": "bookmark/list",
        "tags": [
          "Bookmark"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string",
                      "example": "Operation completed successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "You don't have permission to perform this action"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "required": [
                  "0",
                  "1"
                ]
              }
            }
          }
        }
      }
    },
    "/followers/create": {
      "post": {
        "summary": "Create Followers",
        "description": "Create a new **Followers** record.",
        "externalDocs": {
          "url": "https://sailsjs.com/documentation/reference/blueprint-api/create",
          "description": "See https://sailsjs.com/documentation/reference/blueprint-api/create"
        },
        "tags": [
          "Followers"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Responds with a JSON dictionary representing the newly created **Followers** instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/followers"
                }
              }
            }
          },
          "400": {
            "description": "Validation errors; details in JSON response"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "description": "JSON dictionary representing the Followers instance to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/followers"
              }
            }
          }
        }
      }
    },
    "/profile-members/list": {
      "get": {
        "summary": "/profile-members/list",
        "tags": [
          "list"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/profile-members/profile": {
      "get": {
        "summary": "/profile-members/profile",
        "tags": [
          "profile"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/profile-members/view": {
      "get": {
        "summary": "/profile-members/view",
        "tags": [
          "view"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/profile-members/activate": {
      "put": {
        "summary": "/profile-members/activate",
        "tags": [
          "activate"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/profile-members/update": {
      "put": {
        "summary": "/profile-members/update",
        "tags": [
          "update"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/profile-members/photo-upload": {
      "post": {
        "summary": "/profile-members/photo-upload",
        "tags": [
          "photo-upload"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/profile-members/create": {
      "post": {
        "summary": "/profile-members/create",
        "tags": [
          "create"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/profile-members/destroy-user": {
      "delete": {
        "summary": "/profile-members/destroy-user",
        "tags": [
          "destroy-user"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/notification": {
      "post": {
        "summary": "/users/notification",
        "tags": [
          "Users"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/notification-status": {
      "post": {
        "summary": "/users/notification-status",
        "tags": [
          "Users"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/report/create-host": {
      "post": {
        "summary": "/report/create-host",
        "tags": [
          "create-host"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/report/create-table": {
      "post": {
        "summary": "/report/create-table",
        "tags": [
          "create-table"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/table-booking/view": {
      "get": {
        "summary": "/table-booking/view",
        "tags": [
          "view"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/testpayment/capture": {
      "post": {
        "summary": "/testpayment/capture",
        "tags": [
          "test-capture-payment"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/login-otp": {
      "post": {
        "summary": "/users/login-otp",
        "tags": [
          "Users"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  }
}